/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// NWSNationalHQId Three-letter identifier for NWS National HQ.
type NWSNationalHQId string

// List of NWSNationalHQId
const (
	NWS NWSNationalHQId = "NWS"
)

// All allowed values of NWSNationalHQId enum
var AllowedNWSNationalHQIdEnumValues = []NWSNationalHQId{
	"NWS",
}

func (v *NWSNationalHQId) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NWSNationalHQId(value)
	for _, existing := range AllowedNWSNationalHQIdEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NWSNationalHQId", value)
}

// NewNWSNationalHQIdFromValue returns a pointer to a valid NWSNationalHQId
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNWSNationalHQIdFromValue(v string) (*NWSNationalHQId, error) {
	ev := NWSNationalHQId(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NWSNationalHQId: valid values are %v", v, AllowedNWSNationalHQIdEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NWSNationalHQId) IsValid() bool {
	for _, existing := range AllowedNWSNationalHQIdEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NWSNationalHQId value
func (v NWSNationalHQId) Ptr() *NWSNationalHQId {
	return &v
}

type NullableNWSNationalHQId struct {
	value *NWSNationalHQId
	isSet bool
}

func (v NullableNWSNationalHQId) Get() *NWSNationalHQId {
	return v.value
}

func (v *NullableNWSNationalHQId) Set(val *NWSNationalHQId) {
	v.value = val
	v.isSet = true
}

func (v NullableNWSNationalHQId) IsSet() bool {
	return v.isSet
}

func (v *NullableNWSNationalHQId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNWSNationalHQId(val *NWSNationalHQId) *NullableNWSNationalHQId {
	return &NullableNWSNationalHQId{value: val, isSet: true}
}

func (v NullableNWSNationalHQId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNWSNationalHQId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

