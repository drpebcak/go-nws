/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CenterWeatherAdvisory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CenterWeatherAdvisory{}

// CenterWeatherAdvisory struct for CenterWeatherAdvisory
type CenterWeatherAdvisory struct {
	Id *string `json:"id,omitempty"`
	IssueTime *time.Time `json:"issueTime,omitempty"`
	Cwsu *NWSCenterWeatherServiceUnitId `json:"cwsu,omitempty"`
	Sequence *int32 `json:"sequence,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	End *time.Time `json:"end,omitempty"`
	ObservedProperty *string `json:"observedProperty,omitempty"`
	Text *string `json:"text,omitempty"`
}

// NewCenterWeatherAdvisory instantiates a new CenterWeatherAdvisory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCenterWeatherAdvisory() *CenterWeatherAdvisory {
	this := CenterWeatherAdvisory{}
	return &this
}

// NewCenterWeatherAdvisoryWithDefaults instantiates a new CenterWeatherAdvisory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCenterWeatherAdvisoryWithDefaults() *CenterWeatherAdvisory {
	this := CenterWeatherAdvisory{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CenterWeatherAdvisory) SetId(v string) {
	o.Id = &v
}

// GetIssueTime returns the IssueTime field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetIssueTime() time.Time {
	if o == nil || IsNil(o.IssueTime) {
		var ret time.Time
		return ret
	}
	return *o.IssueTime
}

// GetIssueTimeOk returns a tuple with the IssueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetIssueTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IssueTime) {
		return nil, false
	}
	return o.IssueTime, true
}

// HasIssueTime returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasIssueTime() bool {
	if o != nil && !IsNil(o.IssueTime) {
		return true
	}

	return false
}

// SetIssueTime gets a reference to the given time.Time and assigns it to the IssueTime field.
func (o *CenterWeatherAdvisory) SetIssueTime(v time.Time) {
	o.IssueTime = &v
}

// GetCwsu returns the Cwsu field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetCwsu() NWSCenterWeatherServiceUnitId {
	if o == nil || IsNil(o.Cwsu) {
		var ret NWSCenterWeatherServiceUnitId
		return ret
	}
	return *o.Cwsu
}

// GetCwsuOk returns a tuple with the Cwsu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetCwsuOk() (*NWSCenterWeatherServiceUnitId, bool) {
	if o == nil || IsNil(o.Cwsu) {
		return nil, false
	}
	return o.Cwsu, true
}

// HasCwsu returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasCwsu() bool {
	if o != nil && !IsNil(o.Cwsu) {
		return true
	}

	return false
}

// SetCwsu gets a reference to the given NWSCenterWeatherServiceUnitId and assigns it to the Cwsu field.
func (o *CenterWeatherAdvisory) SetCwsu(v NWSCenterWeatherServiceUnitId) {
	o.Cwsu = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *CenterWeatherAdvisory) SetSequence(v int32) {
	o.Sequence = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *CenterWeatherAdvisory) SetStart(v time.Time) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetEnd() time.Time {
	if o == nil || IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *CenterWeatherAdvisory) SetEnd(v time.Time) {
	o.End = &v
}

// GetObservedProperty returns the ObservedProperty field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetObservedProperty() string {
	if o == nil || IsNil(o.ObservedProperty) {
		var ret string
		return ret
	}
	return *o.ObservedProperty
}

// GetObservedPropertyOk returns a tuple with the ObservedProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetObservedPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.ObservedProperty) {
		return nil, false
	}
	return o.ObservedProperty, true
}

// HasObservedProperty returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasObservedProperty() bool {
	if o != nil && !IsNil(o.ObservedProperty) {
		return true
	}

	return false
}

// SetObservedProperty gets a reference to the given string and assigns it to the ObservedProperty field.
func (o *CenterWeatherAdvisory) SetObservedProperty(v string) {
	o.ObservedProperty = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CenterWeatherAdvisory) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CenterWeatherAdvisory) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CenterWeatherAdvisory) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CenterWeatherAdvisory) SetText(v string) {
	o.Text = &v
}

func (o CenterWeatherAdvisory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CenterWeatherAdvisory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IssueTime) {
		toSerialize["issueTime"] = o.IssueTime
	}
	if !IsNil(o.Cwsu) {
		toSerialize["cwsu"] = o.Cwsu
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.ObservedProperty) {
		toSerialize["observedProperty"] = o.ObservedProperty
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableCenterWeatherAdvisory struct {
	value *CenterWeatherAdvisory
	isSet bool
}

func (v NullableCenterWeatherAdvisory) Get() *CenterWeatherAdvisory {
	return v.value
}

func (v *NullableCenterWeatherAdvisory) Set(val *CenterWeatherAdvisory) {
	v.value = val
	v.isSet = true
}

func (v NullableCenterWeatherAdvisory) IsSet() bool {
	return v.isSet
}

func (v *NullableCenterWeatherAdvisory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCenterWeatherAdvisory(val *CenterWeatherAdvisory) *NullableCenterWeatherAdvisory {
	return &NullableCenterWeatherAdvisory{value: val, isSet: true}
}

func (v NullableCenterWeatherAdvisory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCenterWeatherAdvisory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


