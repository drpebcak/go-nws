/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the GridpointForecastJsonLd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridpointForecastJsonLd{}

// GridpointForecastJsonLd struct for GridpointForecastJsonLd
type GridpointForecastJsonLd struct {
	Context JsonLdContext `json:"@context"`
	// A geometry represented in Well-Known Text (WKT) format.
	Geometry NullableString `json:"geometry"`
	Units *GridpointForecastUnits `json:"units,omitempty"`
	// The internal generator class used to create the forecast text (used for NWS debugging).
	ForecastGenerator *string `json:"forecastGenerator,omitempty"`
	// The time this forecast data was generated.
	GeneratedAt *time.Time `json:"generatedAt,omitempty"`
	// The last update time of the data this forecast was generated from.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	ValidTimes *ISO8601Interval `json:"validTimes,omitempty"`
	Elevation *QuantitativeValue `json:"elevation,omitempty"`
	// An array of forecast periods.
	Periods []GridpointForecastPeriod `json:"periods,omitempty"`
}

type _GridpointForecastJsonLd GridpointForecastJsonLd

// NewGridpointForecastJsonLd instantiates a new GridpointForecastJsonLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpointForecastJsonLd(context JsonLdContext, geometry NullableString) *GridpointForecastJsonLd {
	this := GridpointForecastJsonLd{}
	this.Context = context
	this.Geometry = geometry
	var units GridpointForecastUnits = US
	this.Units = &units
	return &this
}

// NewGridpointForecastJsonLdWithDefaults instantiates a new GridpointForecastJsonLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointForecastJsonLdWithDefaults() *GridpointForecastJsonLd {
	this := GridpointForecastJsonLd{}
	var units GridpointForecastUnits = US
	this.Units = &units
	return &this
}

// GetContext returns the Context field value
func (o *GridpointForecastJsonLd) GetContext() JsonLdContext {
	if o == nil {
		var ret JsonLdContext
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetContextOk() (*JsonLdContext, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *GridpointForecastJsonLd) SetContext(v JsonLdContext) {
	o.Context = v
}

// GetGeometry returns the Geometry field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GridpointForecastJsonLd) GetGeometry() string {
	if o == nil || o.Geometry.Get() == nil {
		var ret string
		return ret
	}

	return *o.Geometry.Get()
}

// GetGeometryOk returns a tuple with the Geometry field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridpointForecastJsonLd) GetGeometryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Geometry.Get(), o.Geometry.IsSet()
}

// SetGeometry sets field value
func (o *GridpointForecastJsonLd) SetGeometry(v string) {
	o.Geometry.Set(&v)
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetUnits() GridpointForecastUnits {
	if o == nil || IsNil(o.Units) {
		var ret GridpointForecastUnits
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetUnitsOk() (*GridpointForecastUnits, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given GridpointForecastUnits and assigns it to the Units field.
func (o *GridpointForecastJsonLd) SetUnits(v GridpointForecastUnits) {
	o.Units = &v
}

// GetForecastGenerator returns the ForecastGenerator field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetForecastGenerator() string {
	if o == nil || IsNil(o.ForecastGenerator) {
		var ret string
		return ret
	}
	return *o.ForecastGenerator
}

// GetForecastGeneratorOk returns a tuple with the ForecastGenerator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetForecastGeneratorOk() (*string, bool) {
	if o == nil || IsNil(o.ForecastGenerator) {
		return nil, false
	}
	return o.ForecastGenerator, true
}

// HasForecastGenerator returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasForecastGenerator() bool {
	if o != nil && !IsNil(o.ForecastGenerator) {
		return true
	}

	return false
}

// SetForecastGenerator gets a reference to the given string and assigns it to the ForecastGenerator field.
func (o *GridpointForecastJsonLd) SetForecastGenerator(v string) {
	o.ForecastGenerator = &v
}

// GetGeneratedAt returns the GeneratedAt field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetGeneratedAt() time.Time {
	if o == nil || IsNil(o.GeneratedAt) {
		var ret time.Time
		return ret
	}
	return *o.GeneratedAt
}

// GetGeneratedAtOk returns a tuple with the GeneratedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetGeneratedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.GeneratedAt) {
		return nil, false
	}
	return o.GeneratedAt, true
}

// HasGeneratedAt returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasGeneratedAt() bool {
	if o != nil && !IsNil(o.GeneratedAt) {
		return true
	}

	return false
}

// SetGeneratedAt gets a reference to the given time.Time and assigns it to the GeneratedAt field.
func (o *GridpointForecastJsonLd) SetGeneratedAt(v time.Time) {
	o.GeneratedAt = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *GridpointForecastJsonLd) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetValidTimes returns the ValidTimes field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetValidTimes() ISO8601Interval {
	if o == nil || IsNil(o.ValidTimes) {
		var ret ISO8601Interval
		return ret
	}
	return *o.ValidTimes
}

// GetValidTimesOk returns a tuple with the ValidTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetValidTimesOk() (*ISO8601Interval, bool) {
	if o == nil || IsNil(o.ValidTimes) {
		return nil, false
	}
	return o.ValidTimes, true
}

// HasValidTimes returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasValidTimes() bool {
	if o != nil && !IsNil(o.ValidTimes) {
		return true
	}

	return false
}

// SetValidTimes gets a reference to the given ISO8601Interval and assigns it to the ValidTimes field.
func (o *GridpointForecastJsonLd) SetValidTimes(v ISO8601Interval) {
	o.ValidTimes = &v
}

// GetElevation returns the Elevation field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetElevation() QuantitativeValue {
	if o == nil || IsNil(o.Elevation) {
		var ret QuantitativeValue
		return ret
	}
	return *o.Elevation
}

// GetElevationOk returns a tuple with the Elevation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetElevationOk() (*QuantitativeValue, bool) {
	if o == nil || IsNil(o.Elevation) {
		return nil, false
	}
	return o.Elevation, true
}

// HasElevation returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasElevation() bool {
	if o != nil && !IsNil(o.Elevation) {
		return true
	}

	return false
}

// SetElevation gets a reference to the given QuantitativeValue and assigns it to the Elevation field.
func (o *GridpointForecastJsonLd) SetElevation(v QuantitativeValue) {
	o.Elevation = &v
}

// GetPeriods returns the Periods field value if set, zero value otherwise.
func (o *GridpointForecastJsonLd) GetPeriods() []GridpointForecastPeriod {
	if o == nil || IsNil(o.Periods) {
		var ret []GridpointForecastPeriod
		return ret
	}
	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointForecastJsonLd) GetPeriodsOk() ([]GridpointForecastPeriod, bool) {
	if o == nil || IsNil(o.Periods) {
		return nil, false
	}
	return o.Periods, true
}

// HasPeriods returns a boolean if a field has been set.
func (o *GridpointForecastJsonLd) HasPeriods() bool {
	if o != nil && !IsNil(o.Periods) {
		return true
	}

	return false
}

// SetPeriods gets a reference to the given []GridpointForecastPeriod and assigns it to the Periods field.
func (o *GridpointForecastJsonLd) SetPeriods(v []GridpointForecastPeriod) {
	o.Periods = v
}

func (o GridpointForecastJsonLd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridpointForecastJsonLd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["@context"] = o.Context
	toSerialize["geometry"] = o.Geometry.Get()
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	if !IsNil(o.ForecastGenerator) {
		toSerialize["forecastGenerator"] = o.ForecastGenerator
	}
	if !IsNil(o.GeneratedAt) {
		toSerialize["generatedAt"] = o.GeneratedAt
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !IsNil(o.ValidTimes) {
		toSerialize["validTimes"] = o.ValidTimes
	}
	if !IsNil(o.Elevation) {
		toSerialize["elevation"] = o.Elevation
	}
	if !IsNil(o.Periods) {
		toSerialize["periods"] = o.Periods
	}
	return toSerialize, nil
}

func (o *GridpointForecastJsonLd) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"@context",
		"geometry",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGridpointForecastJsonLd := _GridpointForecastJsonLd{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGridpointForecastJsonLd)

	if err != nil {
		return err
	}

	*o = GridpointForecastJsonLd(varGridpointForecastJsonLd)

	return err
}

type NullableGridpointForecastJsonLd struct {
	value *GridpointForecastJsonLd
	isSet bool
}

func (v NullableGridpointForecastJsonLd) Get() *GridpointForecastJsonLd {
	return v.value
}

func (v *NullableGridpointForecastJsonLd) Set(val *GridpointForecastJsonLd) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpointForecastJsonLd) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpointForecastJsonLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpointForecastJsonLd(val *GridpointForecastJsonLd) *NullableGridpointForecastJsonLd {
	return &NullableGridpointForecastJsonLd{value: val, isSet: true}
}

func (v NullableGridpointForecastJsonLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpointForecastJsonLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


