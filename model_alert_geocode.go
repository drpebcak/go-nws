/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertGeocode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertGeocode{}

// AlertGeocode Lists of codes for NWS public zones and counties affected by the alert.
type AlertGeocode struct {
	// A list of NWS public zone or county identifiers.
	UGC []string `json:"UGC,omitempty"`
	// A list of SAME (Specific Area Message Encoding) codes for affected counties.
	SAME []string `json:"SAME,omitempty"`
}

// NewAlertGeocode instantiates a new AlertGeocode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertGeocode() *AlertGeocode {
	this := AlertGeocode{}
	return &this
}

// NewAlertGeocodeWithDefaults instantiates a new AlertGeocode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertGeocodeWithDefaults() *AlertGeocode {
	this := AlertGeocode{}
	return &this
}

// GetUGC returns the UGC field value if set, zero value otherwise.
func (o *AlertGeocode) GetUGC() []string {
	if o == nil || IsNil(o.UGC) {
		var ret []string
		return ret
	}
	return o.UGC
}

// GetUGCOk returns a tuple with the UGC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertGeocode) GetUGCOk() ([]string, bool) {
	if o == nil || IsNil(o.UGC) {
		return nil, false
	}
	return o.UGC, true
}

// HasUGC returns a boolean if a field has been set.
func (o *AlertGeocode) HasUGC() bool {
	if o != nil && !IsNil(o.UGC) {
		return true
	}

	return false
}

// SetUGC gets a reference to the given []string and assigns it to the UGC field.
func (o *AlertGeocode) SetUGC(v []string) {
	o.UGC = v
}

// GetSAME returns the SAME field value if set, zero value otherwise.
func (o *AlertGeocode) GetSAME() []string {
	if o == nil || IsNil(o.SAME) {
		var ret []string
		return ret
	}
	return o.SAME
}

// GetSAMEOk returns a tuple with the SAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertGeocode) GetSAMEOk() ([]string, bool) {
	if o == nil || IsNil(o.SAME) {
		return nil, false
	}
	return o.SAME, true
}

// HasSAME returns a boolean if a field has been set.
func (o *AlertGeocode) HasSAME() bool {
	if o != nil && !IsNil(o.SAME) {
		return true
	}

	return false
}

// SetSAME gets a reference to the given []string and assigns it to the SAME field.
func (o *AlertGeocode) SetSAME(v []string) {
	o.SAME = v
}

func (o AlertGeocode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertGeocode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UGC) {
		toSerialize["UGC"] = o.UGC
	}
	if !IsNil(o.SAME) {
		toSerialize["SAME"] = o.SAME
	}
	return toSerialize, nil
}

type NullableAlertGeocode struct {
	value *AlertGeocode
	isSet bool
}

func (v NullableAlertGeocode) Get() *AlertGeocode {
	return v.value
}

func (v *NullableAlertGeocode) Set(val *AlertGeocode) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertGeocode) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertGeocode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertGeocode(val *AlertGeocode) *NullableAlertGeocode {
	return &NullableAlertGeocode{value: val, isSet: true}
}

func (v NullableAlertGeocode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertGeocode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


