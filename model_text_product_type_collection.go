/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TextProductTypeCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TextProductTypeCollection{}

// TextProductTypeCollection struct for TextProductTypeCollection
type TextProductTypeCollection struct {
	Context *JsonLdContext `json:"@context,omitempty"`
	Graph []TextProductTypeCollectionGraphInner `json:"@graph,omitempty"`
}

// NewTextProductTypeCollection instantiates a new TextProductTypeCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextProductTypeCollection() *TextProductTypeCollection {
	this := TextProductTypeCollection{}
	return &this
}

// NewTextProductTypeCollectionWithDefaults instantiates a new TextProductTypeCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextProductTypeCollectionWithDefaults() *TextProductTypeCollection {
	this := TextProductTypeCollection{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *TextProductTypeCollection) GetContext() JsonLdContext {
	if o == nil || IsNil(o.Context) {
		var ret JsonLdContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextProductTypeCollection) GetContextOk() (*JsonLdContext, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *TextProductTypeCollection) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given JsonLdContext and assigns it to the Context field.
func (o *TextProductTypeCollection) SetContext(v JsonLdContext) {
	o.Context = &v
}

// GetGraph returns the Graph field value if set, zero value otherwise.
func (o *TextProductTypeCollection) GetGraph() []TextProductTypeCollectionGraphInner {
	if o == nil || IsNil(o.Graph) {
		var ret []TextProductTypeCollectionGraphInner
		return ret
	}
	return o.Graph
}

// GetGraphOk returns a tuple with the Graph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TextProductTypeCollection) GetGraphOk() ([]TextProductTypeCollectionGraphInner, bool) {
	if o == nil || IsNil(o.Graph) {
		return nil, false
	}
	return o.Graph, true
}

// HasGraph returns a boolean if a field has been set.
func (o *TextProductTypeCollection) HasGraph() bool {
	if o != nil && !IsNil(o.Graph) {
		return true
	}

	return false
}

// SetGraph gets a reference to the given []TextProductTypeCollectionGraphInner and assigns it to the Graph field.
func (o *TextProductTypeCollection) SetGraph(v []TextProductTypeCollectionGraphInner) {
	o.Graph = v
}

func (o TextProductTypeCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TextProductTypeCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["@context"] = o.Context
	}
	if !IsNil(o.Graph) {
		toSerialize["@graph"] = o.Graph
	}
	return toSerialize, nil
}

type NullableTextProductTypeCollection struct {
	value *TextProductTypeCollection
	isSet bool
}

func (v NullableTextProductTypeCollection) Get() *TextProductTypeCollection {
	return v.value
}

func (v *NullableTextProductTypeCollection) Set(val *TextProductTypeCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableTextProductTypeCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableTextProductTypeCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextProductTypeCollection(val *TextProductTypeCollection) *NullableTextProductTypeCollection {
	return &NullableTextProductTypeCollection{value: val, isSet: true}
}

func (v NullableTextProductTypeCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextProductTypeCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


