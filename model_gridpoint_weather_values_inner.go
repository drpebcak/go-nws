/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GridpointWeatherValuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridpointWeatherValuesInner{}

// GridpointWeatherValuesInner struct for GridpointWeatherValuesInner
type GridpointWeatherValuesInner struct {
	ValidTime ISO8601Interval `json:"validTime"`
	Value []GridpointWeatherValuesInnerValueInner `json:"value"`
}

type _GridpointWeatherValuesInner GridpointWeatherValuesInner

// NewGridpointWeatherValuesInner instantiates a new GridpointWeatherValuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpointWeatherValuesInner(validTime ISO8601Interval, value []GridpointWeatherValuesInnerValueInner) *GridpointWeatherValuesInner {
	this := GridpointWeatherValuesInner{}
	this.ValidTime = validTime
	this.Value = value
	return &this
}

// NewGridpointWeatherValuesInnerWithDefaults instantiates a new GridpointWeatherValuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointWeatherValuesInnerWithDefaults() *GridpointWeatherValuesInner {
	this := GridpointWeatherValuesInner{}
	return &this
}

// GetValidTime returns the ValidTime field value
func (o *GridpointWeatherValuesInner) GetValidTime() ISO8601Interval {
	if o == nil {
		var ret ISO8601Interval
		return ret
	}

	return o.ValidTime
}

// GetValidTimeOk returns a tuple with the ValidTime field value
// and a boolean to check if the value has been set.
func (o *GridpointWeatherValuesInner) GetValidTimeOk() (*ISO8601Interval, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidTime, true
}

// SetValidTime sets field value
func (o *GridpointWeatherValuesInner) SetValidTime(v ISO8601Interval) {
	o.ValidTime = v
}

// GetValue returns the Value field value
func (o *GridpointWeatherValuesInner) GetValue() []GridpointWeatherValuesInnerValueInner {
	if o == nil {
		var ret []GridpointWeatherValuesInnerValueInner
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *GridpointWeatherValuesInner) GetValueOk() ([]GridpointWeatherValuesInnerValueInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *GridpointWeatherValuesInner) SetValue(v []GridpointWeatherValuesInnerValueInner) {
	o.Value = v
}

func (o GridpointWeatherValuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridpointWeatherValuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["validTime"] = o.ValidTime
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *GridpointWeatherValuesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"validTime",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGridpointWeatherValuesInner := _GridpointWeatherValuesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGridpointWeatherValuesInner)

	if err != nil {
		return err
	}

	*o = GridpointWeatherValuesInner(varGridpointWeatherValuesInner)

	return err
}

type NullableGridpointWeatherValuesInner struct {
	value *GridpointWeatherValuesInner
	isSet bool
}

func (v NullableGridpointWeatherValuesInner) Get() *GridpointWeatherValuesInner {
	return v.value
}

func (v *NullableGridpointWeatherValuesInner) Set(val *GridpointWeatherValuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpointWeatherValuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpointWeatherValuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpointWeatherValuesInner(val *GridpointWeatherValuesInner) *NullableGridpointWeatherValuesInner {
	return &NullableGridpointWeatherValuesInner{value: val, isSet: true}
}

func (v NullableGridpointWeatherValuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpointWeatherValuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


