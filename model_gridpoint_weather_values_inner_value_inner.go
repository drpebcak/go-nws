/*
weather.gov API

weather.gov API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GridpointWeatherValuesInnerValueInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GridpointWeatherValuesInnerValueInner{}

// GridpointWeatherValuesInnerValueInner A value object representing expected weather phenomena.
type GridpointWeatherValuesInnerValueInner struct {
	Coverage NullableString `json:"coverage"`
	Weather NullableString `json:"weather"`
	Intensity NullableString `json:"intensity"`
	Visibility QuantitativeValue `json:"visibility"`
	Attributes []string `json:"attributes"`
}

type _GridpointWeatherValuesInnerValueInner GridpointWeatherValuesInnerValueInner

// NewGridpointWeatherValuesInnerValueInner instantiates a new GridpointWeatherValuesInnerValueInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpointWeatherValuesInnerValueInner(coverage NullableString, weather NullableString, intensity NullableString, visibility QuantitativeValue, attributes []string) *GridpointWeatherValuesInnerValueInner {
	this := GridpointWeatherValuesInnerValueInner{}
	this.Coverage = coverage
	this.Weather = weather
	this.Intensity = intensity
	this.Visibility = visibility
	this.Attributes = attributes
	return &this
}

// NewGridpointWeatherValuesInnerValueInnerWithDefaults instantiates a new GridpointWeatherValuesInnerValueInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointWeatherValuesInnerValueInnerWithDefaults() *GridpointWeatherValuesInnerValueInner {
	this := GridpointWeatherValuesInnerValueInner{}
	return &this
}

// GetCoverage returns the Coverage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetCoverage() string {
	if o == nil || o.Coverage.Get() == nil {
		var ret string
		return ret
	}

	return *o.Coverage.Get()
}

// GetCoverageOk returns a tuple with the Coverage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetCoverageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Coverage.Get(), o.Coverage.IsSet()
}

// SetCoverage sets field value
func (o *GridpointWeatherValuesInnerValueInner) SetCoverage(v string) {
	o.Coverage.Set(&v)
}

// GetWeather returns the Weather field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetWeather() string {
	if o == nil || o.Weather.Get() == nil {
		var ret string
		return ret
	}

	return *o.Weather.Get()
}

// GetWeatherOk returns a tuple with the Weather field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetWeatherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Weather.Get(), o.Weather.IsSet()
}

// SetWeather sets field value
func (o *GridpointWeatherValuesInnerValueInner) SetWeather(v string) {
	o.Weather.Set(&v)
}

// GetIntensity returns the Intensity field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetIntensity() string {
	if o == nil || o.Intensity.Get() == nil {
		var ret string
		return ret
	}

	return *o.Intensity.Get()
}

// GetIntensityOk returns a tuple with the Intensity field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridpointWeatherValuesInnerValueInner) GetIntensityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Intensity.Get(), o.Intensity.IsSet()
}

// SetIntensity sets field value
func (o *GridpointWeatherValuesInnerValueInner) SetIntensity(v string) {
	o.Intensity.Set(&v)
}

// GetVisibility returns the Visibility field value
func (o *GridpointWeatherValuesInnerValueInner) GetVisibility() QuantitativeValue {
	if o == nil {
		var ret QuantitativeValue
		return ret
	}

	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *GridpointWeatherValuesInnerValueInner) GetVisibilityOk() (*QuantitativeValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// SetVisibility sets field value
func (o *GridpointWeatherValuesInnerValueInner) SetVisibility(v QuantitativeValue) {
	o.Visibility = v
}

// GetAttributes returns the Attributes field value
func (o *GridpointWeatherValuesInnerValueInner) GetAttributes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *GridpointWeatherValuesInnerValueInner) GetAttributesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *GridpointWeatherValuesInnerValueInner) SetAttributes(v []string) {
	o.Attributes = v
}

func (o GridpointWeatherValuesInnerValueInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GridpointWeatherValuesInnerValueInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["coverage"] = o.Coverage.Get()
	toSerialize["weather"] = o.Weather.Get()
	toSerialize["intensity"] = o.Intensity.Get()
	toSerialize["visibility"] = o.Visibility
	toSerialize["attributes"] = o.Attributes
	return toSerialize, nil
}

func (o *GridpointWeatherValuesInnerValueInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"coverage",
		"weather",
		"intensity",
		"visibility",
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGridpointWeatherValuesInnerValueInner := _GridpointWeatherValuesInnerValueInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGridpointWeatherValuesInnerValueInner)

	if err != nil {
		return err
	}

	*o = GridpointWeatherValuesInnerValueInner(varGridpointWeatherValuesInnerValueInner)

	return err
}

type NullableGridpointWeatherValuesInnerValueInner struct {
	value *GridpointWeatherValuesInnerValueInner
	isSet bool
}

func (v NullableGridpointWeatherValuesInnerValueInner) Get() *GridpointWeatherValuesInnerValueInner {
	return v.value
}

func (v *NullableGridpointWeatherValuesInnerValueInner) Set(val *GridpointWeatherValuesInnerValueInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpointWeatherValuesInnerValueInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpointWeatherValuesInnerValueInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpointWeatherValuesInnerValueInner(val *GridpointWeatherValuesInnerValueInner) *NullableGridpointWeatherValuesInnerValueInner {
	return &NullableGridpointWeatherValuesInnerValueInner{value: val, isSet: true}
}

func (v NullableGridpointWeatherValuesInnerValueInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpointWeatherValuesInnerValueInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


